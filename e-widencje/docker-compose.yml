version: '3.4'

services:
#  test-db:
#    image: postgres
#    container_name: test-db
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=postgres
#    ports:
#      - 5433:5432
#    networks:
#      - test-network

  backend:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:5000
    ports:
      - "5000:5000"
#    volumes:
#      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
#      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
#    image: ${DOCKER_REGISTRY-}e-widencje
    build:
      context: .
      dockerfile: e-widencje/Dockerfile
    restart: always

  client:
    ports:
      - "5001:5001"
#    image: client
    depends_on:
      - proxy
    build:
      context: ./e-widencje/ClientApp
      dockerfile: Dockerfile
    restart: always

  proxy:
#    image: nginx:mainline
#    volumes:
#      -  ./nginx.conf:/etc/nginx/nginx.conf
    build:
      context: ./certificates
      dockerfile: nginx.Dockerfile
    ports:
      - "80:80"
      - "443:443"
    restart: always